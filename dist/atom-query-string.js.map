{"version":3,"sources":["../src/atom-query-string.ts"],"sourcesContent":["import { atom } from \"jotai\";\r\nimport { RESET, atomWithReset } from \"jotai/utils\";\r\n\r\ntype SetStateAction<S> = S | ((prevState: S) => S);\r\n\r\nexport interface QueryString {\r\n  parse: (str: string) => Record<string, any>;\r\n  stringify: (obj: Record<string, any>) => string;\r\n}\r\n\r\nexport interface AtomWithQueryStringOptions<Value> {\r\n  onValueChange?: (value: Value) => void;\r\n  onPathnameChange?: (pathname: string) => void;\r\n  queryString?: QueryString;\r\n  getOnInit?: boolean;\r\n}\r\n\r\nfunction isNumber(num: any) {\r\n  if (typeof num === \"number\") {\r\n    return num - num === 0;\r\n  }\r\n  if (typeof num === \"string\" && num.trim() !== \"\") {\r\n    return Number.isFinite ? Number.isFinite(+num) : isFinite(+num);\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction toNumberable(value: any): any {\r\n  if (Array.isArray(value)) {\r\n    return value.map((item: any) => toNumberable(item));\r\n  }\r\n  switch (typeof value) {\r\n    case \"string\":\r\n      return isNumber(value) ? Number(value) : value;\r\n\r\n    default:\r\n      return value;\r\n  }\r\n}\r\n\r\nfunction parseQueryString<Value>(searchParams: string, initialValue: Value) {\r\n  const output: Record<string, any> = {};\r\n  const urlParams = new URLSearchParams(searchParams);\r\n\r\n  // Set will return only unique keys()\r\n  new Set([...urlParams.keys()]).forEach((key) => {\r\n    output[key] =\r\n      urlParams.getAll(key).length > 1\r\n        ? urlParams.getAll(key)\r\n        : initialValue instanceof Object &&\r\n          key in initialValue &&\r\n          typeof initialValue[key as keyof typeof initialValue] === \"number\"\r\n        ? toNumberable(urlParams.get(key))\r\n        : urlParams.get(key);\r\n  });\r\n\r\n  return output;\r\n}\r\n\r\nfunction stringifyQueryString(obj: Record<string, any>) {\r\n  return Object.entries(obj)\r\n    .flatMap(([key, value]) => {\r\n      if (Array.isArray(value)) {\r\n        return value.map((item) => {\r\n          if (item == undefined || item == null) return;\r\n          return encodeURIComponent(key) + \"=\" + encodeURIComponent(item);\r\n        });\r\n      }\r\n      if (value == undefined || value == null) return;\r\n      return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\r\n    })\r\n    .join(\"&\");\r\n}\r\n\r\nfunction createQueryString<Value>(initialValue: Value): QueryString {\r\n  return {\r\n    parse: (searchParams) =>\r\n      parseQueryString<Value>(searchParams, initialValue),\r\n    stringify: stringifyQueryString,\r\n  };\r\n}\r\n\r\nexport const atomWithQueryString = <Value extends object>(\r\n  initialValue: Readonly<Value>,\r\n  {\r\n    onValueChange,\r\n    onPathnameChange,\r\n    queryString = createQueryString<Value>(initialValue),\r\n    getOnInit,\r\n  }: AtomWithQueryStringOptions<Value> = {}\r\n) => {\r\n  const getValueWithQueryString = <Value extends object>(\r\n    initialValue: Value\r\n  ) => {\r\n    const url = new URL(window.location.href);\r\n\r\n    for (const k of url.searchParams.keys()) {\r\n      if (!(k in initialValue)) {\r\n        url.searchParams.delete(k);\r\n      }\r\n    }\r\n    const parsed = queryString.parse(url.searchParams.toString());\r\n\r\n    return Object.assign({}, initialValue, parsed);\r\n  };\r\n  const baseAtom = atomWithReset<Value>(\r\n    getOnInit ? getValueWithQueryString<Value>(initialValue) : initialValue\r\n  );\r\n\r\n  const anAtom = atom(\r\n    (get) => get(baseAtom),\r\n    (get, set, update: SetStateAction<Value> | typeof RESET) => {\r\n      const newValue =\r\n        update === RESET\r\n          ? initialValue\r\n          : update instanceof Function\r\n          ? update(get(baseAtom))\r\n          : update;\r\n\r\n      set(baseAtom, newValue);\r\n      onValueChange?.(newValue);\r\n\r\n      const url = new URL(window.location.href);\r\n      const parsed = queryString.parse(url.searchParams.toString());\r\n      const searchParams = queryString.stringify(\r\n        Object.assign(parsed, newValue)\r\n      );\r\n\r\n      const resultUrl =\r\n        update === RESET ? url.pathname : url.pathname + \"?\" + searchParams;\r\n\r\n      if (onPathnameChange instanceof Function) {\r\n        onPathnameChange(resultUrl);\r\n      } else {\r\n        window.history.pushState(null, \"\", resultUrl);\r\n      }\r\n    }\r\n  );\r\n\r\n  anAtom.onMount = (setAtom) => {\r\n    const handlePopState = () => {\r\n      setAtom(getValueWithQueryString(initialValue));\r\n    };\r\n    if (!getOnInit) {\r\n      handlePopState();\r\n    }\r\n    window.addEventListener(\"popstate\", handlePopState);\r\n    return () => window.removeEventListener(\"popstate\", handlePopState);\r\n  };\r\n\r\n  return anAtom;\r\n};\r\n"],"mappings":"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","names":["initialValue"]}